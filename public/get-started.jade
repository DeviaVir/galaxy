style.
	code {
		border-radius: 6px;
		background: #EEE;
		padding: 3px 8px;
		font-weight: 600;
		width: 100%;
	}
	

section(style="background: #39205F; color: #fff; border-bottom: #eee 3px solid")
	div(g="centered lg-container")
		h1 Getting Started
		p Learn the ropes and start prototyping.


section#content
	aside(g="2 md-12" style="border-right: #ddd 5px solid; padding: 3em;")
		ul <b>Sections</b>
			li <a href="#installation">Installation</a>
			li <a href="#attributes">Attributes</a>
			li <a href="#state-toggle">State toggling</a>
			li <a href="#licensing">Licensing</a>


	div(g="centered left 10 lg-container")

		h2 Installation
		h3 Galaxy CDN
		p The quickest way to use Galaxy is by adding the CDN link inside your project's head tag. Galaxy.css is enough for basic CSS layouts. However, any interactions involving states (dropdowns, responsive nav) will require galaxy.js (it's only 1kb minified).

		h4 Galaxy Base (Stylesheet)
		code &lt;link rel=&quot;stylesheet&quot; href=&quot;https://galaxyui.com/galaxy/galaxy.css&quot;&gt;
		h4 Galaxy State-toggle (Javascript)
		code &lt;script src=&quot;https://galaxyui.com/galaxy/galaxy.js&quot;&gt;&lt;/script&gt;
		p This will always link to the latest version of Galaxy.

		h3 Clone with Git

		code git clone https://github.com/Magmoz/galaxy

		h2 Building Components
		p Galaxy uses HTML and their attributes rather than classes for styling elements. In doing so, each attribute effectively declares a separate namespace for encapsulating style information, resulting in more readable and maintainable HTML &amp; CSS.
		p For example, a button might have the following markup:

		code &lt;button g=&quot;centered large primary&quot; id=&quot;send&quot;&gt;Submit Form&lt;/button&gt;
		
		h2 Using Galaxy.js to Toggle States

		p Galaxy uses CSS to transition, but requires `galaxy.js` to toggle between states. With <code>galaxy.js</code>, you can create versatile interactions all without touching any Javascript.

		h3 st-group
		
		p The `st-group` attribute groups unique components together, and this creates a "connection" between them. For example, two dropdown buttons might be connected with different st-groups:
		
		h3 st-role (target/ trigger)
		p <code>st-role</code> has two options: As a `trigger`, it will apply a class of `st-state` to the `target`. The `target` is simply the element that is being appended the class. The following example would apply a class of `active` on the parent div when the button is clicked:

		p With that, you can build interactions for virtually any state.

		h2 Contributing

		p Galaxy is currently in Beta, so this means you might run into the ocassional bug. If this is the case, <a href="https://github.com/Magmoz/galaxy/issues/new">create an issue</a> with the problem and your markup so we can fix it asap.

		h3 Submitting a pull request
		p There's probably <a href="https://github.com/Magmoz/galaxy/issues">an open issue right now</a>. If you think you've found a solution, please submit a pull request and reference it in the issue. If it hasn't been reported before, just a pull request is necessary.

		h2 Licensing
		p Galaxy was created by <a href="//twitter.com/andyfang98">Andy Fang</a> and licensed under the <a href="//tldrlegal.com/license/mit-license">MIT license</a>. Basically, you can do whatever you want with it as long as the original license stays intact.